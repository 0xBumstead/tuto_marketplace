{"version":3,"sources":["logo.png","components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","Component","Main","_this","onSubmit","event","preventDefault","name","productName","value","price","window","web3","utils","toWei","productPrice","toString","createProduct","type","ref","input","placeholder","required","scope","products","map","product","key","fromWei","owner","purchased","Name","onClick","purchaseProduct","removed","removeProduct","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","productCount","loading","bind","assertThisInitialized","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","Marketplace","networks","marketplace","Contract","abi","address","methods","i","concat","toConsumableArray","_this2","send","from","once","receipt","_this3","_this4","components_Navbar","role","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9b38980.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06825633.png\";","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"https://www.jfrey.fr\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Bumsteadâ€™s Marketplace\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div id=\"content\">\n        <h1>Add Product</h1>\n        <form onSubmit={(event) => {\n          event.preventDefault();\n          const name = this.productName.value;\n          const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether');\n          this.props.createProduct(name, price);\n        }}>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"productName\"\n              type=\"text\"\n              ref={(input) => { this.productName = input }}\n              className=\"form-control\"\n              placeholder=\"Product Name\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"productPrice\"\n              type=\"text\"\n              ref={(input) => { this.productPrice = input }}\n              className=\"form-control\"\n              placeholder=\"Product Price\"\n              required />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\n        </form>\n        <p>&nbsp;</p>\n        <h1>Buy Product</h1>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Owner</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody id=\"productList\">\n            { this.props.products.map((product, key) => {\n              return(\n                <tr key={key}>\n                  <th scope=\"row\">{product.id.toString()}</th>\n                  <td>{product.name}</td>\n                  <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\n                  <td>{product.owner}</td>\n                  <td>\n                    { !product.purchased\n                      ? <button\n                          Name={product.id}\n                          value={product.price} \n                          onClick={(event) => {\n                            this.props.purchaseProduct(event.target.name, event.target.value)\n                            }}\n                        >\n                          Buy\n                        </button>\n                      : null\n                    }\n                    { !product.removed\n                      ? <button\n                          Name={product.id}\n                          onClick={(event) => {\n                            this.props.removeProduct(event.target.name)\n                            }}\n                        >\n                          Remove\n                        </button>\n                      : null\n                    }\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport logo from '../logo.png';\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    }\n    else {\n      window.alert('Non-Ethereum browser detected.');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Marketplace.networks[networkId];\n    if(networkData) {\n      const marketplace = web3.eth.Contract(Marketplace.abi, networkData.address);\n      this.setState({ marketplace });\n      const productCount = await marketplace.methods.productCount().call();\n      this.setState({ productCount });\n      // load products\n      for (var i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call();\n        const removed = product.removed;\n        if(!removed){\n          this.setState({\n            products: [...this.state.products, product]\n          })\n        }\n      }\n      this.setState({ loading: false});\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.');\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      productCount: 0,\n      products: [],\n      loading: true\n    };\n    this.createProduct = this.createProduct.bind(this);\n    this.purchaseProduct = this.purchaseProduct.bind(this);\n    this.removeProduct = this.removeProduct.bind(this);\n  }\n\n  createProduct(name, price) {\n    this.setState({ loading: true });\n    this.state.marketplace.methods.createProduct(name, price).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    });\n  }\n\n  purchaseProduct(id, price) {\n    this.setState({ loading: true });\n    this.state.marketplace.methods.purchaseProduct(id).send({ from: this.state.account, value: price })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    });\n  }\n\n  removeProduct(id) {\n    this.setState({ loading: true });\n    this.state.marketplace.methods.removeProduct(id).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              { this.state.loading\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <Main\n                    products={this.state.products}\n                    createProduct={this.createProduct} \n                    purchaseProduct={this.purchaseProduct}\n                    removeProduct={this.removeProduct}\n                    />\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}